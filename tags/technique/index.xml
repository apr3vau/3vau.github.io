<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>technique on The 3rd Vast Affective Unity</title>
    <link>http://ser3vau.club/tags/technique/</link>
    <description>Recent content in technique on The 3rd Vast Affective Unity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 22 Oct 2021 00:19:24 +0800</lastBuildDate><atom:link href="http://ser3vau.club/tags/technique/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mac</title>
      <link>http://ser3vau.club/mac/</link>
      <pubDate>Fri, 22 Oct 2021 00:19:24 +0800</pubDate>
      
      <guid>http://ser3vau.club/mac/</guid>
      <description>概述    虽然我很不喜欢苹果，但它质量过硬还是真的——无论硬件还是软件。
按键绑定    众所周知，macOS的按键绑定很个性，当然也非常好用。 macOS把ctrl和meta键的功能拆开混合了，其中复制粘贴、撤销重做被视作系统功能扔进了meta的管辖范畴，而ctrl则完全负责文本操作——这极大地降低了使用者罹患腱鞘炎的概率。同时macOS还对ctrl文本操作进行了扩展，使它部分兼容emacs的按键绑定，如C-a、C-e、C-f等等。这种优秀的设计甚至让我有那么一瞬间产生了动摇——最终我没有选择像在Linux上一样直接把ctrl和meta调换，而是选择改变习惯，让右手的功能键承担工作。这几乎完全保留了macOS系统的按键绑定，让我有了尝试新事物的空间，配合emacs-mac也能做到和emacs无缝衔接，十分舒适。
续航    虽然macOS值得称道的地方很多，但是唯一一个让我能够下定决心使用macOS的原因只有一个——惊人的续航能力。请看下图：
 这真的震惊到我了——我来来回回配置了个把月的arch Linux，续航竟然还不如开箱即用的macOS？！而且macOS的续航非但没有随着系统版本更新而越来越短，反而越来越长了？！好吧，我认了，人家大牌就是不一样。而且我在Linux上使用的自由软件，在macOS上照样能够正常工作。真香。
外观    这真的没啥可说的，macOS的体验是出了名的美观。不过我发现了其中一些不一样的地方。直觉告诉我，macOS的桌面实现很简单——没错，就是简单。相比Windows和plasma，它简单很多。但是macOS把这份简单做得很优秀——流畅的动画和合理的布局使得它简单而不简陋。这是我很喜欢它的一个地方。——也正是这份简单让我能在续航9小时的情况下还能用上完整的桌面环境，哈哈哈哈 Mojave的动态壁纸做的也很不错，相比Windows上的Wallpaper Engine，这种轻量、简约、不影响专注性的动态壁纸更对我胃口。
包管理    这大概是我唯一想要吐槽的一点了——我想过homebrew可能是apt的样子，可能是pacman的样子，但我没想到，真正的homebrew竟然是portage（Gentoo包管理系统）的样子！分层级的软件包分类、tap添加第三方软件源、默认编译安装——这不就是个没有make.conf的portage嘛！！好么，最终还是跳不出编译这个大坑……除了长相，homebrew用起来远远不如Linux的包管理器顺手。下面是我遇到的几个问题，当然它们中有很大一部分可能和我用的Mojave不是最新的系统有关。
  如果要用homebrew安装的包替换系统自带的包（例如git和emacs），就需要单独设置PATH环境变量，否则启动的还是旧版的软件；
  要指定make时所用的CPU核心数，需要设置 HOMEBREW_MAKE_JOBS 变量，如我在安装emacs-mac时使用的就是：
HOMEBREW_MAKE_JOBS=4 brew install emacs-mac &amp;ndash;with-modules
  幸亏有玩Gentoo的经验打底，要不然……🤣
先写这些吧，有新的经验再补充。</description>
    </item>
    
    <item>
      <title>搞机日常</title>
      <link>http://ser3vau.club/%E6%90%9E%E6%9C%BA%E6%97%A5%E5%B8%B8/</link>
      <pubDate>Mon, 18 Oct 2021 09:57:51 +0800</pubDate>
      
      <guid>http://ser3vau.club/%E6%90%9E%E6%9C%BA%E6%97%A5%E5%B8%B8/</guid>
      <description>这里记录了我探索过的那些奇奇怪怪的技术，看心情更新，希望能够帮到需要的人～
 CPU Mac  </description>
    </item>
    
    <item>
      <title>cpu</title>
      <link>http://ser3vau.club/cpu/</link>
      <pubDate>Mon, 18 Oct 2021 09:55:53 +0800</pubDate>
      
      <guid>http://ser3vau.club/cpu/</guid>
      <description>概述    cpu，电脑运算核心。
 差距  在18年以后的新电脑上，cpu的强大与否基本体现不出来，但对于我这种2012年的本子就很要命了 cpu性能的判断标准是型号，如我的intel 3400和18年的8000，在运算能力上就相差不止三四倍 intel x86_64 cpu分为i3、i5、i7和与我无缘的i9，可以区分同代cpu的能力   作用  决定电脑的响应速度 决定编译程序的速度 直接影响gentoo linux使用的舒适程度（原因为上一条）    监视方法      查看当前cpu频率
watch grep &amp;ldquo;cpu MHz&amp;rdquo; /proc/cpuinfo
  查看当前cpu详细信息（包括温度）
i7z
  往往还是top最简单好用。
  ——其实kde的系统监视器是最好用的。
  优化小窍门     把cpu调速器设置成powersave可以极大增加续航。  archwiki    cpupower frequency-set -g governor</description>
    </item>
    
  </channel>
</rss>
